--- ens-contracts/ModexpPrecompile.883a0a2d64d07df54f3ebbb0e81cf2e9d012c14d.sol	2023-05-10 17:58:50.545458289 -0700
+++ ens-contracts/ModexpPrecompile.sol	2023-04-27 12:25:22.471862811 -0700
@@ -1,3 +1,4 @@
+// SPDX-License-Identifier: MIT
 pragma solidity ^0.8.4;
 
 library ModexpPrecompile {
@@ -8,7 +9,7 @@
         bytes memory base,
         bytes memory exponent,
         bytes memory modulus
-    ) internal view returns (bool success, bytes memory output) {
+    ) internal view returns (bytes memory output) {
         bytes memory input = abi.encodePacked(
             uint256(base.length),
             uint256(exponent.length),
@@ -20,6 +21,7 @@
 
         output = new bytes(modulus.length);
 
+        bool success;
         assembly {
             success := staticcall(
                 gas(),
@@ -30,5 +32,7 @@
                 mload(modulus)
             )
         }
+
+        require(success, "modexp call failed");
     }
 }
