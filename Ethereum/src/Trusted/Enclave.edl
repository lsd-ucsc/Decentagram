// Copyright (c) 2022 Decentagram
// Use of this source code is governed by an MIT-style
// license that can be found in the LICENSE file or at
// https://opensource.org/licenses/MIT.

enclave
{
	from "sgx_tstdc.edl" import *;

	from "DecentEnclave/SgxEDL/decent_common.edl" import *;
	from "DecentEnclave/SgxEDL/net_io.edl" import *;
	from "DecentEnclave/SgxEDL/sys_io.edl" import *;

	trusted
	{
		/* define ECALLs here. */

		public sgx_status_t ecall_ethereum_clt_init(
			[in, size=in_conf_size] const uint8_t* in_conf,
			size_t in_conf_size,
			uint64_t start_blk_num,
			[in, size=20] const uint8_t* in_sync_addr,
			[in, string] const char* in_sync_esign,
			[in, size=20] const uint8_t* in_pubsub_addr,
			[user_check] void* host_blk_svc
		);

		public sgx_status_t ecall_ethereum_clt_recv_block(
			[in, size=blk_size] const uint8_t* blk_data,
			size_t blk_size
		);

	}; // trusted

	untrusted
	{
		sgx_status_t ocall_ethereum_clt_get_receipts(
			[user_check] const void* host_blk_svc,
			uint64_t blk_num,
			[out] uint8_t** out_buf,
			[out] size_t* out_buf_size
		);

		sgx_status_t ocall_ethereum_clt_get_latest_blknum(
			[user_check] const void* host_blk_svc,
			[out] uint64_t* out_blk_num
		);
	}; // untrusted

}; // enclave
